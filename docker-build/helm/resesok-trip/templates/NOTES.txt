{{- $svc := .Values.virtualService.name }}
{{- $prefix := .Values.virtualService.prefix }}

1. Visit the service at the following URL:

{{- range $host := .Values.virtualService.hosts }}
  https://{{ $host }}{{ if $prefix }}/{{ $prefix }}{{ end }}/{{ $svc }}
{{- end }}

2. Or, get the application URL by running these commands:

{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "resesok-trip.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT{{ if $prefix }}/{{ $prefix }}{{ end }}/{{ $svc }}
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "resesok-trip.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "resesok-trip.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}{{ if $prefix }}/{{ $prefix }}{{ end }}/{{ $svc }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "resesok-trip.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "http://127.0.0.1:8080{{ if $prefix }}/{{ $prefix }}{{ end }}/{{ $svc }}"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:80
{{- end }}
