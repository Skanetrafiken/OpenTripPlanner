# Pipeline for after pull request has been approved and development branch has been merged to release branch
trigger:
- resesok-otp2

pool: TJP

resources:
  repositories:
  - repository: self
  - repository: Common
    type: git
    name: Infra/common-devops-templates
    ref: refs/tags/8.0.1

variables:
  ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags/') }}:
    isTaggedRelease: true
    buildVersion: $(Build.SourceBranchName)
  ${{ else }}:
    isTaggedRelease: false
    buildVersion: '0.1.$(Build.BuildId)-$(Build.SourceVersion)'

stages:
  - stage: PREPARE
    jobs:
      - job: PREPARE
        pool: TJP
        steps:
          - task: AzureCli@2
            displayName: 'Get latest resesok-trip version'
            name: find_version
            env:
              REPOSITORY: resesok-trip
              REGISTRY: TJPCRPROD
            inputs:
              azureSubscription: 'ST IKT DEV'
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                LATEST=$(\
                  az acr repository show-tags --name $REGISTRY --repository $REPOSITORY --orderby time_desc --top 5 --output tsv \
                  | grep --invert-match latest \
                  | grep --invert-match cache \
                  | head -n 1)
                echo "##vso[task.setvariable variable=tripVersion;isOutput=true]$LATEST"
                echo "Using resesok-trip version: $LATEST"

  - stage: BUILD
    jobs:
      - job: BUILD
        pool: TJP
        steps:
        - checkout: self
          persistCredentials: true
          clean: true

        - task: DownloadSecureFile@1
          displayName: 'Get Maven authorization configuration'
          name: settingsSecurity
          inputs:
            secureFile: settings-security.xml

        # security issue
        - bash: echo $(cp -p $(settingsSecurity.secureFilePath) /tmp/settings-security.xml)
          displayName: 'Copy Maven authorization configuration'

        - task: JavaToolInstaller@0
          displayName: 'Use JDK 17'
          inputs:
            versionSpec: '17'
            jdkArchitectureOption: 'x64'
            jdkSourceOption: 'PreInstalled'

        - task: AzureKeyVault@1
          displayName: 'Fetch Nexus password from KeyVault'
          inputs:
            azureSubscription: 'ST IKT DEV'
            KeyVaultName: journeyplanner-kv-dev
            secretsFilter: 'MVN-PASSWORD'

        - bash: docker-build/azure-deploy/git-version.sh
          displayName: 'Create new git tag with current version'
          name: otp_version
          env:
            DEVOPS_ACCESSTOKEN: $(System.AccessToken)
            MVN_PASSWORD: $(MVN-PASSWORD)

        - bash: sed -i 's/<groupId>org.opentripplanner<\/groupId>/<groupId>se.skanetrafiken<\/groupId>/' pom.xml
          displayName: 'Change groupId'

        - bash: sed -i 's/<artifactId>otp<\/artifactId>/<artifactId>resesok-otp<\/artifactId>/' pom.xml
          displayName: 'Change artifactId'

        #- task: Maven@3
        #  condition: eq(variables['SKIP_DEPLOY'], 'true')
        #  displayName: 'Build but skip publish'
        #  inputs:
        #    goals: 'clean package'
        #    options: '-Pjunit-report --settings docker-build/azure-deploy/settings.xml -Dsettings.security=/tmp/settings-security.xml -B -U'
        #    jdkVersionOption: '1.17'
        #    jdkArchitectureOption: 'x64'
        #    mavenOptions: '-Xmx2G'

        - task: Maven@3
          #condition: eq(variables['SKIP_DEPLOY'], 'false')
          displayName: 'Build and publish to Sk√•netrafiken Maven repository'
          inputs:
            goals: 'clean deploy'
            options: '-Pjunit-report --settings docker-build/azure-deploy/settings.xml -Dsettings.security=/tmp/settings-security.xml -Drevision=$(buildVersion) -B -U'
            jdkVersionOption: '1.17'
            jdkArchitectureOption: 'x64'
            mavenOptions: '-Xmx2G'

        - task: PublishCodeCoverageResults@1
          displayName: 'Report code coverage'
          inputs:
            codeCoverageTool: 'JaCoCo'
            reportDirectory: $(System.DefaultWorkingDirectory)/target/site/jacoco-ut/**/*.*
            summaryFileLocation: $(System.DefaultWorkingDirectory)/target/site/jacoco-ut/jacoco.xml

        - task: Bash@3
          displayName: 'Copy data to docker build directory'
          inputs:
            filePath: docker-build/docker/copy-docker-data.sh

        - template: as-a-service/build.yaml@Common
          parameters:
            azureSubscription: 'ST IKT DEV'
            chartName: resesok-otp
            chartPath: docker-build/helm/resesok-otp
            chartVersion: $(buildVersion)
            images:
              - name: resesok-otp
                source: docker-build/docker
                context: .
                tags:
                  - $(buildVersion)

  - stage: DEV
    dependsOn: [PREPARE, BUILD]
    jobs:
      - template: templates/deploy-template.yml
        parameters:
          otpVersion: $(buildVersion) #[ stageDependencies.BUILD.BUILD.outputs['otp_version.otpVersion'] ]
          tripVersion: $[ stageDependencies.PREPARE.PREPARE.outputs['find_version.tripVersion'] ]
          environment: DEV

# TODO: remove this once we have split the pods fully

# temporarily disabled since we don't want to publish to dev right now
#- task: TriggerBuild@3
#  displayName: 'Trigger resesok-proxy'
#  inputs:
#    definitionIsInCurrentTeamProject: true
#    buildDefinition: resesok-proxy
#    queueBuildForUserThatTriggeredBuild: true
#    ignoreSslCertificateErrors: false
#    useSameSourceVersion: false
#    useCustomSourceVersion: false
#    useSameBranch: false
#    branchToUse: master
#    waitForQueuedBuildsToFinish: false
#    storeInEnvironmentVariable: false
#    authenticationMethod: 'OAuth Token'
#    enableBuildInQueueCondition: false
#    dependentOnSuccessfulBuildCondition: false
#    dependentOnFailedBuildCondition: false
#    checkbuildsoncurrentbranch: false
#    failTaskIfConditionsAreNotFulfilled: false
